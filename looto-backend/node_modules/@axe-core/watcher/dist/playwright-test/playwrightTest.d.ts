import type { TestType, Page, PlaywrightTestArgs, PlaywrightTestOptions, PlaywrightWorkerArgs, PlaywrightWorkerOptions, Expect } from '@playwright/test';
import { PlaywrightController, type Options } from '../playwright/playwright';
export type PageWithAxeWatcher = Page & {
    axeWatcher: PlaywrightController;
};
type Test = TestType<PlaywrightTestArgs & PlaywrightTestOptions & Fixtures, PlaywrightWorkerArgs & PlaywrightWorkerOptions>;
type Fixtures = {
    page: PageWithAxeWatcher;
};
interface ReturnValue {
    test: Test;
    expect: Expect;
}
/**
 * Configure `@playwright/test` for usage with axe Watcher and return wrapped `test` and `expect` functions.
 *
 * @param options Options for configuring Playwright and @axe-core/watcher
 * @see https://playwright.dev/docs/api/class-test#test-call
 * @see https://playwright.dev/docs/api/class-test#test-expect
 */
declare const playwrightTest: (options: Options) => ReturnValue;
export default playwrightTest;
