interface WriteSessionFileParams {
    buildID: string | undefined;
}
/**
 * Writes a session file to the users temp directory.
 *
 * When a user is running end-to-end tests that spawn multiple processes (like in Playwright-test),
 * a primary process typically orchestrates the test suite
 * while separate child processes execute the individual tests.
 *
 * If each process independently generates and writes its own session ID
 * to a shared file, you'll end up with new sessions as each process
 * overwrites the previous one's data.
 *
 * To maintain a single consistent session across all processes,
 * have each process check if the session file exists before writing.
 *
 * The first process to start will create and write the session file,
 * while subsequent processes will read and use that existing session ID
 * instead of generating their own.
 *
 */
declare function writeSessionFile({ buildID }: WriteSessionFileParams): void;
export default writeSessionFile;
