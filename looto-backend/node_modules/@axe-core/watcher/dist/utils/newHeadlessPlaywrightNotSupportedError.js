"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeadlessPlaywrightNotSupportedError = void 0;
exports.generatePlaywrightHeadlessMessage = generatePlaywrightHeadlessMessage;
function generatePlaywrightHeadlessMessage(prefixedMessage) {
    return (prefixedMessage +
        ' Opt-in the new headless mode, youʼll need to include the "channel" property ' +
        'in your options and set it to "chrome" or "chromium". ' +
        'Youʼll also need to include "headless: true" or "headless: false" if you havenʼt already. ' +
        'Please see https://github.com/microsoft/playwright/issues/33566 for more information.');
}
class HeadlessPlaywrightNotSupportedError extends Error {
    constructor(prefixedMessage) {
        super(generatePlaywrightHeadlessMessage(prefixedMessage));
        this.name = 'NewHeadlessPlaywrightNotSupportedError';
    }
}
exports.HeadlessPlaywrightNotSupportedError = HeadlessPlaywrightNotSupportedError;
//# sourceMappingURL=newHeadlessPlaywrightNotSupportedError.js.map